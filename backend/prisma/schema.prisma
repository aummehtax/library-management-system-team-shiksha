// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String           @id @default(uuid())
  email         String           @unique
  username      String           @unique
  password      String
  firstName     String
  lastName      String
  createdAt     DateTime         @default(now())
  updatedAt     DateTime         @updatedAt
  groupMember   GroupMember[]
}

model GroupMember {
  id            String           @id @default(uuid())
  userId        String
  groupId       String
  user          User             @relation(fields: [userId], references: [id])
  group         Group            @relation(fields: [groupId], references: [id])
  joinedAt      DateTime         @default(now())

  @@unique([userId, groupId])
}

model Group {
  id            String           @id @default(uuid())
  name          String
  members       GroupMember[]
  createdAt     DateTime         @default(now())
}

model Book {
  id              String         @id @default(uuid())
  isbn            String         @unique
  title           String
  author          String?
  price           Float
  categoryId      String
  category        Category       @relation(fields: [categoryId], references: [id])
  totalCopies     Int            @default(3)
  availableCopies Int            @default(3)
  condition       String         @default("good")
  createdAt       DateTime       @default(now())
}

model Category {
  id        String   @id @default(uuid())
  name      String   @unique
  books     Book[]
}